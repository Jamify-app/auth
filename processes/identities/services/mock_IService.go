// Code generated by mockery v2.20.0. DO NOT EDIT.

package services

import (
	gin "github.com/gin-gonic/gin"
	mock "github.com/stretchr/testify/mock"

	models "github.com/Jamify-app/auth/processes/identities/models"
)

// MockIService is an autogenerated mock type for the IService type
type MockIService struct {
	mock.Mock
}

// CreateIdentity provides a mock function with given fields: _a0, _a1
func (_m *MockIService) CreateIdentity(_a0 *gin.Context, _a1 *models.Identity) (*models.Identity, error) {
	ret := _m.Called(_a0, _a1)

	var r0 *models.Identity
	var r1 error
	if rf, ok := ret.Get(0).(func(*gin.Context, *models.Identity) (*models.Identity, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(*gin.Context, *models.Identity) *models.Identity); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Identity)
		}
	}

	if rf, ok := ret.Get(1).(func(*gin.Context, *models.Identity) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMockIService interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockIService creates a new instance of MockIService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockIService(t mockConstructorTestingTNewMockIService) *MockIService {
	mock := &MockIService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
